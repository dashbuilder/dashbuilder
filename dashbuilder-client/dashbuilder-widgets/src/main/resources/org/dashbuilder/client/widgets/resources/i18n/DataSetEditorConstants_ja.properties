newDataSet=新しい {0} データセット
error=エラーが発生しました
type=タイプ
message=メッセージ
cause=原因
ok=OK
loading=ロード中
selectType=プロバイダータイプの選択
bean=Bean
csv=CSV
sql=SQL
elasticSearch=Elastic Search
bean_description=Bean プロバイダーにより Java クラスで生成されたデータを消費できるようになります
csv_description=CSV プロバイダーにより CSV ファイルに含まれるデータを消費できるようになります
sql_description=SQL プロバイダーにより SQL ストレージシステムに存在するデータを消費できるようになります
elasticSearch_description=Elastic Search プロバイダーにより Elastic Search ストレージシステムに存在するデータを消費できるようになります
next=次へ
next_description=プロバイダー設定エディションに移動
updateTest=更新 & テスト
updateTest_description=リモートシステムに対するルックアップを実行することにより、データプロバイダー設定で更新されたパラメーターをテストします。注意\: プレビュータブのテーブルが更新され、現在の列とフィルター設定が失われます (存在する場合)。
test=テスト
test_description=リモートシステムに対するルックアップを実行することにより、データプロバイダー設定のパラメーターをテストします。ルックアップの結果は、次の画面で表示されます。
save=保存
save_description=データセットを保存および登録して利用可能にする
back=戻る
back_description=プロバイダーデータセットタイプ選択画面に戻る
providerType=プロバイダータイプ
commonAttributes=共通の属性
performance=パフォーマンス
backendCache=バックエンドキャッシュ
backendCacheDisabledForType=タイプに対するバックエンドキャッシュを無効にすることはできない
clientCache=クライアントキャッシュ
refreshPolicy=ポリシーの更新
none=なし
scheduledInterval=スケジュールされた間隔
refreshOnStaleData=古いデータの更新
refreshEvery=データ更新間隔
bytes=バイト
rows=行
attributeId=ID
attributeId_description=列の一意の ID
attributeColumnType=列データタイプ
attributeColumnType_description=データセット列のデータタイプ
attributeUUID=UUID
attributeUUID_description=データセットの一意の ID。データセットを参照するのに役に立ちます
attributeName=名前
attributeName_description=データセットの名前。含まれるデータを表す説明的な文字列
attributeMaxBytes=最大バイト
attributeMaxBytes_description=クライアントキャッシュが有効な場合は、データセットをクライアントにプッシュするために許可される最大サイズ (バイト単位) を指定します。データセットサイズがこの値よりも大きい場合は、クライアントにプッシュされません
attributeMaxRows=最大行
attributeMaxRows_description=バックエンドキャッシュが有効な場合は、データセットをメモリーでキャッシュするために許可される最大サイズ (行単位) を指定します。データセットサイズがこの値よりも大きい場合は、キャッシュされません
attributeRefreshInterval=間隔
attributeRefreshInterval_description=データセット更新が有効な場合は、更新する間隔を指定します。更新ごとに、外部ストレージシステムに対するルックアップが行われます
attributeRefreshOnStaleData=古いデータの更新
attributeRefreshOnStaleData_description=データセット更新が有効な場合、このフラグはデータセットが変更されない場合にプロバイダーがルックアップを実行して新しいデータをフェッチするかどうかを示します (行数をチェックする)。これにより、新しいデータが存在する場合にルックアップするために接続数を削減することが可能になります (ただし、更新間隔は設定されます)。
on=ON
off=OFF
provider=1.- データプロバイダー設定
colsAndFilter=2.- 列および初期フィルター設定
cacheAndRefresh=3.- キャッシュおよび更新設定
configureProvider=外部システムを消費するデータプロバイダーの設定
configureColumns=フェッチされた列と各列のバインディングデータタイプの設定
configureInitialFilter=データセットの初期フィルターの設定 (必要な場合)
configureCacheAndRefreshSettings=データセットのキャッシュおよび更新の設定
saveAndDeployDataSet=データセットの保存およびデプロイ
defaultDataSetName=新しいデータセット
sqlAttributes=SQL 属性
sql_datasource=データソース
sql_datasource_description=外部データソースに対するデータソース接続の JNDI パス
sql_datasource_placeHolder=java\:jboss/datasources/ExampleDS
sql_schema=スキーマ
sql_schema_description=データベーススキーマ (必要な場合)。空白にすることができます
sql_schema_placeHolder=MySchema01
sql_table=テーブル
sql_table_description=クエリーを実行するデータベーステーブル
sql_table_placeHolder=MyTable
sql_source=ソース
sql_query=クエリー
sql_query_description=データセットをフェッチする標準的な SQL クエリー
sql_query_placeHolder=select * from MyTable
beanAttributes=Bean 属性
staticAttributes=静的属性
csvAttributes=CSV 属性
csv_filePath=ファイルパス
csv_filePath_description=CSV ファイルが存在するローカルファイルシステムパス
csv_filePath_placeholder=/home/dashbuilder/myReports.csv
csv_URL=ファイル URL
csv_URL_description=CSV ファイルを消費するための URL 
csv_URL_placeholder=file\://home/dashbuilder/myReports.csv
csv_useFilePath=ローカルファイルの使用
csv_useFileURL=有効なファイル URL の指定
csv_sepChar=セパレーター文字
csv_sepChar_description=値を区切るために使用する文字
csv_sepChar_placeholder=セパレーター文字 (;)
csv_quoteChar=引用符
csv_quoteChar_description=引用に使用する文字
csv_quoteChar_placeholder=引用符 (\\)
csv_escapeChar=エスケープ文字
csv_escapeChar_description=値をエスケープするために使用する文字
csv_escapeChar_placeholder=エスケープ文字 (\\)
csv_datePattern=日付形式
csv_datePattern_description=CSV ファイルに存在する日付列値を消費するための日付形式
csv_datePattern_placeholder=日付形式  (MM-dd-yyyy)
csv_numberPattern=数値形式
csv_numberPattern_description=CSV ファイルに存在する数値列値を消費するための数値形式
csv_numberPattern_placeholder=数値形式 (\#,\#\#\#.\#\#)
elAttributes=Elastic Search 属性
el_server_url=サーバー URL
el_server_url_description=Elastic Search REST API の URL
el_server_url_placeholder=http\://localhost\:9200
el_cluster_name=クラスター名
el_cluster_name_description=クラスターの名前。空白にすることができます
el_cluster_name_placeholder=my_cluster
el_index=インデックス
el_index_description=クエリーを実行するインデックス名
el_index_placeholder=my_index
el_type=ドキュメントタイプ
el_type_description=該当するインデックスに対してクエリーを実行するためのドキュメントタイプ。空白の場合は、現在のインデックスのすべてのドキュメントタイプが消費されます
el_type_placeholder=my_type
bean_generator_class=ジェネレータークラス
bean_generator_class_description=データセットを生成する Java クラスの完全修飾クラス名
bean_generator_class_placeholder=org.example.MyDataSetGenerator
bean_generator_params=ジェネレーターパラメーター
bean_generator_params_description=ジェネレータークラス引数として使用する値ペアのパラメーターのリスト
bean_generator_params_placeholder=\ 
bean_generator_param_key=キー
bean_generator_param_key_description=ジェネレータークラス引数のキー
bean_generator_param_key_placeholder=key1
bean_generator_param_value=値
bean_generator_param_value_description=ジェネレータークラス引数の値
bean_generator_param_value_placeholder=Value1
tab_configguration=設定
tab_preview=プレビュー
tab_advancedConfiguration=詳細
filter=フィルター
dataColumns=データ列
label=ラベル
text=テキスト
number=数値
date=日付
showColumnsAndFilter=列およびフィルターの表示
hideColumnsAndFilter=列およびフィルターの非表示
export=エクスポート
exportToExcel=Excel へエクスポート
exportToCSV=CSV へエクスポート
defNotFound=データセット定義が見つからないか、このデータセットに定義がありません
